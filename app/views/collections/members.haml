= render '/tabs'

- content_for :head do
  :javascript
    $(function() { initMemberships(#{current_user.id}, #{collection.id}, #{collection_admin?}, #{collection.layers.map{|x| {id: x.id, name: x.name}}.to_json}); });
  :css
    table.GralTable td.center { text-align: center; }
    
.tabsline
  #memberships-main.hidden-until-loaded
    %h2= t('views.collections.members.title')
    %p= t('views.collections.members.description')
    %br/

  .tablewrapp
    %table.GralTable
      %colgroup
        %col{width: '300px'}
        %col{width: '60px'}
        %col{width: '60px'}
        %col{width: '60px'}
        %col{width: '60px'}
        %col{width: '420px'}
      %tr
        %th.members-tree{style: '-webkit-border-radius:8px 0 0 0;-moz-border-radius:8px 0 0 0;'} 
          = t('views.collections.members.member')
          &rarr; 
          = t('views.collections.members.site')
          &rarr; 
          = t('views.collections.members.layer')
        %th.members-permission= t('views.collections.members.none')
        %th.members-permission= t('views.collections.members.read')
        %th.members-permission= t('views.collections.members.update')
        %th.members-permission= t('views.collections.members.admin')

        %th
      %tr{ :class => :membersFirstRow }
        %td
        %td
        %td
        %td
        %td
        %td
      /ko foreach: memberships
      /ko ifnot: isCurrentUser
      %tr{ko(css: { :expandedMember => :expanded }), :class => :membersRow}
        /ko if: expanded
        = render 'collections/members/expanded_member'
        //ko

        /ko ifnot: expanded
        = render 'collections/members/collapsed_member'
        //ko
      %tr
        %td{:colspan => 6, :style => 'height:5px;border-bottom:0px;'}
      //ko
      //ko
      - if collection_admin?
        = render 'collections/members/add_member'
        = render 'collections/members/add_non_existed_member'
