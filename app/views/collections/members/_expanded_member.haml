%td.member{style: 'cursor:pointer;', colspan: 6}
  .memberHeaderRow
    .memberHeaderColumn
      %img.members-collapse-icon{ko(click: :toggleExpanded, attr: {src: "'#{InsteddRails.url}/theme/images/icons/misc/black/arrow' + (expanded() ? 'Down' : 'Right') + '.png'"})}
      %span{ko(click: :toggleExpanded, text: :userDisplayName)}
      - if 'userPhoneNumber'
        %span{ko(text: :userPhoneNumber), style: 'font-size: 12px;'}

    - ['None', 'Read', 'Update'].each do |permission|
      .permissionColumn{ko(text: "summary#{permission}", css: "{ summaryAll: summary#{permission}() == window.t('javascripts.collections.members.permissions.all'), summarySome: summary#{permission}() == window.t('javascripts.collections.members.permissions.some') }")}

    .permissionColumn.admin
      %input{ko(checked: :admin), type: :checkbox}
    .lastColumn

  .defaultLayerPermissionsRow
    .memberHeaderColumn
      %hr.underlineExpandedMember
      .defaultLayerPermissionsTitle{ko(click: :toggleDefaultLayerPermissions)}
        %img.members-collapse-icon{ko(attr: {src: "defaultLayerPermissionsArrow('#{InsteddRails.url}')" })}
        %span.memberDetailsTitle
          = t('views.collections.members.default_permissions_for_all_layers')

    - ['None', 'Read', 'Update'].each do |permission|
      .permissionColumn
        %hr.underlineExpandedMember
          %input{ko(disable: :admin, checked: "allLayers#{permission}", :attr => { "name" => "userId" }), :value => "all", :type => 'radio'}

    .permissionColumn.admin
      %hr.underlineExpandedMember
    .lastColumn

  /ko if: defaultLayerPermissionsExpanded
  /ko foreach: layers
  .layerRow
    .memberHeaderColumn{ko(text: "layerName()")}
    - ['None', 'Read', 'Update'].each do |permission|
      .permissionColumn
        %input{ko(disable: "$parent.admin()", checked: "#{permission.downcase}Checked"), :value => "true", :type => 'radio'}
    .permissionColumn.admin
    .lastColumn
  //ko
  //ko

  .customPermissionsTitleRow
    .memberHeaderColumn
      .frame
        .memberDetailsTitle{ko(text: 'site_permissions_title')}
    - ['None', 'Read', 'Update'].each do |permission|
      .permissionColumn
        .frame
    .permissionColumn.admin
      .frame
    .lastColumn

  /ko foreach: sitesWithCustomPermissions
  .customPermissionRow
    .memberHeaderColumn
      .frame
        .memberCustomPermissionsSiteName{ko(text: 'name')}
        %button.clist-remove.memberRemoveCustomPermissionSite{ko(click: "$parent.removeCustomPermission")}
        %hr.underlineExpandedMember{ko(visible: '$index() < $parent.sitesWithCustomPermissions().length - 1')}
    - ['None', 'Read', 'Update'].each do |permission|
      .permissionColumn
        .frame
          %input{ko(disable: "$parent.admin", checked: "#{permission.downcase}Checked"), :value => "true", :type => 'radio'}
        %hr.underlineExpandedMember{ko(visible: '$index() < $parent.sitesWithCustomPermissions().length - 1')}
    .permissionColumn.admin
      .frame
        %hr.underlineExpandedMember{ko(visible: '$index() < $parent.sitesWithCustomPermissions().length - 1')}
    .lastColumn
  //ko

  .addCustomPermissionRow{ko(attr: { "id" => "customPermissionsAutocompleteId()" })}
    .memberHeaderColumn
      .frame
        %input.autocomplete-site-input.ux-search{ ko(autocomplete: :customSite, value: :customSite, valueUpdate: :afterkeydown, source: "searchSitesUrl()", event: {keydown: :keyPress, blur: :save}), type: :text, placeholder: t('views.collections.members.add_custom_permissions_for_site') }
        %button.clist-add{ko(click: :createCustomPermissionForSite)}
    - ['None', 'Read', 'Update'].each do |permission|
      .permissionColumn
    .permissionColumn.admin
    .lastColumn

  .removeMemberRow
    .memberHeaderColumn
      = render './ko_confirm_box', :action_description => t('views.collections.members.remove_this_member'), :icon_class => 'fdelete', :confirm_action_prompt => t('views.collections.members.remove_member_prompt')
